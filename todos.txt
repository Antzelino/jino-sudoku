TODO List Legend:
[ ] Not started
[~] In progress
[x] Done
[-] Abandoned
[>] Postponed

__________

Tasks:
[~] Implement hidden pairs, to be able to go further with sudoku med1
[ ] Cover with `#if DEBUG` relevant pieces of code, such as loops with assertions
[ ] Implement hidden candidates, that checks hidden singles, pairs, triplets, etc.
[ ] Implement naked candidates, that checks naked singles, pairs, triplets, etc.
[ ] Implement improved algorithm
[ ] CUnit Testing Framework for tests
[ ] Change Notes.values array into a single bitmask, one bit for each of 9 possible values (so 16-bit bitmask and we use 9 of those)
[>] Add testing with example sudokus and known solution that can run via makefile
[-] Have a way to understand why a board wouldn't be solved after a run of the algorithm (print to some log file or something to see results or debug the run etc.)
[x] Use other ascii characters to print sudoku borders between the numbers
[x] Print border with bold typeface around the 9-squares
[x] Add one test sudoku with solution
[x] Be able to print a sudoku board
[x] Implement first solving algorithm
[x] Add more assertions to prevent bugs
[x] Refactor project to separate functionalities and make sense of code
[x] Implement printing the possible values board when sudoku is not solved, as a debugging helper
[x] Implement hidden singles. Check each row & column & 3x3. If some "possible value" is shown only one time, it can be put there and eliminated adjacently
